document.addEventListener("DOMContentLoaded", function () {
    // –ß–∞—Ç-–±–æ—Ç —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è
    let chatBot = document.getElementById("chatbot");
    chatBot.innerHTML = "–ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç AgroProsper. –Ø–∫ –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏?";

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –∑–º—ñ–Ω–∞ —Ä–µ–∫–ª–∞–º–Ω–∏—Ö –±–∞–Ω–µ—Ä—ñ–≤
    let banner = document.getElementById("banner");
    let banners = ["banner1.jpg", "banner2.jpg", "banner3.jpg"];
    setInterval(() => {
        let randomIndex = Math.floor(Math.random() * banners.length);
        banner.src = "images/" + banners[randomIndex];
    }, 5000);

    // –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ —Ñ—ñ–Ω–∞–Ω—Å—ñ–≤
    function trackFinance(income, expenses) {
        return income - expenses;
    }
});
async function getCommodityPrice(commodity) {
    let response = await fetch(`https://api.api-ninjas.com/v1/commodityprice?name=${commodity}`, {
        headers: { "X-Api-Key": "–í–ê–®_API_–ö–õ–Æ–ß" }
    });
    let data = await response.json();
    console.log(`–¶—ñ–Ω–∞ ${commodity}: $${data.price}`);
}
getCommodityPrice("wheat"); // –û—Ç—Ä–∏–º–∞—Ç–∏ —Ü—ñ–Ω—É –Ω–∞ –ø—à–µ–Ω–∏—Ü—é
async function registerWithGoogle() {
    let response = await fetch("https://accounts.google.com/o/oauth2/auth", {
        method: "POST",
        headers: { "Authorization": "Bearer –í–ê–®_API_–ö–õ–Æ–ß" }
    });
    let data = await response.json();
    console.log(`–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π: ${data.email}`);
}

async function registerWithMicrosoft() {
    let response = await fetch("https://login.microsoftonline.com/oauth2/v2.0/authorize", {
        method: "POST",
        headers: { "Authorization": "Bearer –í–ê–®_API_–ö–õ–Æ–ß" }
    });
    let data = await response.json();
    console.log(`–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —á–µ—Ä–µ–∑ Microsoft: ${data.email}`);
}
async function registerWithGoogle() {
    let response = await fetch("https://accounts.google.com/o/oauth2/auth", {
        method: "POST",
        headers: { "Authorization": "Bearer –í–ê–®_API_–ö–õ–Æ–ß" }
    });
    let data = await response.json();
    console.log(`–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π —á–µ—Ä–µ–∑ Google: ${data.email}`);
}
async function registerWithMicrosoft() {
    let response = await fetch("https://login.microsoftonline.com/oauth2/v2.0/authorize", {
        method: "POST",
        headers: { "Authorization": "Bearer –í–ê–®_API_–ö–õ–Æ–ß" }
    });
    let data = await response.json();
    console.log(`–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π —á–µ—Ä–µ–∑ Microsoft: ${data.email}`);
}
function checkAgreementStatus(user) {
    if (user.hasSignedAgreement) {
        let commission = user.paymentAmount * 0.10;
        console.log(`–ö–æ–º—ñ—Å—ñ—è –∑–∞ —É–≥–æ–¥—É: ${commission} USD`);
    } else {
        console.log("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –ø—ñ–¥–ø–∏—Å–∞–≤ —É–≥–æ–¥—É.");
    }
}
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

ga('create', '–í–ê–®_–ö–û–î_–ê–ù–ê–õ–Ü–¢–ò–ö–ò', 'auto');
ga('send', 'pageview');
async function getMarketTrends() {
    let response = await fetch("https://api.agroanalytics.com/trends", {
        headers: { "Authorization": "Bearer –í–ê–®_API_–ö–õ–Æ–ß" }
    });
    let data = await response.json();
    console.log(`–ü—Ä–æ–≥–Ω–æ–∑ —Ä–∏–Ω–∫—É: ${data.trends}`);
}
getMarketTrends();
async function detectUserLanguage() {
    let userLang = navigator.language || navigator.userLanguage;
    document.documentElement.lang = userLang;
    console.log(`–ú–æ–≤–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ${userLang}`);
}
detectUserLanguage();
async function postAdToSocial(platform, adContent) {
    let response = await fetch(`https://api.${platform}.com/post`, {
        method: "POST",
        headers: { "Authorization": "Bearer –í–ê–®_API_–ö–õ–Æ–ß" },
        body: JSON.stringify({ content: adContent })
    });
    let result = await response.json();
    console.log(`–†–µ–∫–ª–∞–º–∞ –Ω–∞ ${platform}: ${result.status}`);
}
postAdToSocial("facebook", "AgroProsper ‚Äì —ñ–Ω–Ω–æ–≤–∞—Ü—ñ—ó –∞–≥—Ä–æ–±—ñ–∑–Ω–µ—Å—É!");
require('dotenv').config();
const express = require('express');
const crypto = require('crypto');
const app = express();

app.use(express.json());

// üîê –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
app.post('/api/secure-endpoint', (req, res) => {
  const token = req.headers['authorization'];
  const secret = process.env.BOT_SECRET_KEY;
  if (token !== `Bearer ${secret}`) return res.status(403).json({ error: '‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —Ç–æ–∫–µ–Ω' });
  res.json({ message: '‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ!' });
});

// üîß –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ç–æ–∫–µ–Ω–∞ –∑ –ø–∞–Ω–µ–ª—ñ
app.post('/api/admin/gen-token', (req, res) => {
  const token = crypto.randomBytes(32).toString('hex');
  res.json({ token, created: new Date() });
});

app.listen(process.env.PORT || 3001, () => console.log('üîí Backend OK'));
API_ACCESS_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω_–¥–æ—Å—Ç—É–ø—É_–¥–æ_API
BOT_SECRET_KEY=—Å–µ–∫—Ä–µ—Ç–Ω–∏–π_–∫–ª—é—á_–¥–ª—è_–±–æ—Ç–∞
const crypto = require('crypto');
const fs = require('fs');
const token = crypto.randomBytes(32).toString('hex');
fs.writeFileSync('.env', `BOT_SECRET_KEY=${token}\n`, { flag: 'a' });
console.log('‚úÖ BOT_SECRET_KEY —Å—Ç–≤–æ—Ä–µ–Ω–æ —Ç–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É .env');
const fs = require('fs');
const files = ['.env', 'backend/index.js'];
const regex = /(ghp|github_pat|token|secret)[^\s"']{10,}/gi;
files.forEach(f => {
  const content = fs.readFileSync(f, 'utf8');
  const matches = content.match(regex);
  if (matches) console.warn(`‚ö†Ô∏è ${f} ‚Üí`, matches);
});
