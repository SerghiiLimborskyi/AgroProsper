const express = require('express');
const router = express.Router();
const fetch = require('node-fetch');

// üîê –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
const TON_API_KEY = process.env.TON_API_KEY;
const NFT_CONTRACT_ADDRESS = process.env.NFT_CONTRACT_ADDRESS;
const NFT_METADATA_URI = process.env.NFT_METADATA_URI; // ipfs://.../metadata-inline.json

router.post('/mint-reward', async (req, res) => {
  const { wallet } = req.body;

  if (!wallet || !wallet.startsWith('EQ')) {
    return res.status(400).json({ success: false, error: '‚õî –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞ –∞–¥—Ä–µ—Å–∞ TON-–≥–∞–º–∞–Ω—Ü—è' });
  }

  try {
    // üîÅ –í–∏–∫–ª–∏–∫ TonAPI –∞–±–æ –≤–ª–∞—Å–Ω–æ–≥–æ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç—É
    const mintTx = await fetch('https://tonapi.io/v2/nft/mint', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${TON_API_KEY}`,
        'Content-Type': 'application/json'
      },
      const { logMint } = require('./log-mint');
await logMint({ wallet, game: 'DAO of Crops', reward: 'Top Farmer NFT' });

      body: JSON.stringify({
        to: wallet,
        contract: NFT_CONTRACT_ADDRESS,
        metadata_uri: NFT_METADATA_URI
      })
    });

    const result = await mintTx.json();

    if (result.success || result.tx_hash) {
      return res.json({ success: true });
    } else {
      return res.status(500).json({ success: false, error: 'üö® –ú—ñ–Ω—Ç–∏–Ω–≥ –Ω–µ –≤–¥–∞–≤—Å—è' });
    }
  } catch (err) {
    console.error('‚ùå Mint error:', err);
    res.status(500).json({ success: false, error: 'üö® –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –º—ñ–Ω—Ç—É–≤–∞–Ω–Ω—ñ' });
  }
});

module.exports = router;
