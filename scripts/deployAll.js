const hre = require("hardhat");

async function main() {
  console.log("üöÄ –ü–æ—á–∏–Ω–∞—î–º–æ –¥–µ–ø–ª–æ–π–º–µ–Ω—Ç...");

  // 1. –î–µ–ø–ª–æ–π UserRegistry
  const UserRegistry = await hre.ethers.getContractFactory("UserRegistry");
  const userRegistry = await UserRegistry.deploy();
  await userRegistry.deployed();
  console.log(`‚úÖ UserRegistry –∑–∞–¥–µ–ø–ª–æ–π–Ω–∏–π –∑–∞ –∞–¥—Ä–µ—Å–æ—é: ${userRegistry.address}`);

  // 2. –î–µ–ø–ª–æ–π AGT Token
  const AGT = await hre.ethers.getContractFactory("AGT");
  const agt = await AGT.deploy("AgroToken", "AGT", 1000000);
  await agt.deployed();
  console.log(`‚úÖ AGT Token –∑–∞–¥–µ–ø–ª–æ–π–Ω–∏–π –∑–∞ –∞–¥—Ä–µ—Å–æ—é: ${agt.address}`);

  // 3. (–û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ) –ó–±–µ—Ä–µ–≥—Ç–∏ –∞–¥—Ä–µ—Å–∏ –≤ —Ñ–∞–π–ª
  const fs = require("fs");
  const data = {
    userRegistry: userRegistry.address,
    agtToken: agt.address,
  };
  fs.writeFileSync("contractAddress.json", JSON.stringify(data, null, 2));
  console.log("üì¶ –ê–¥—Ä–µ—Å–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ contractAddress.json");
}

main().catch((error) => {
  console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–µ–ø–ª–æ–π–º–µ–Ω—Ç—É:", error);
  process.exitCode = 1;
});
