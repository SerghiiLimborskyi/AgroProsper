app.get('/api/orders', async (req, res) => {
  try {
    const records = await base('Orders').select({
      sort: [{ field: 'timestamp', direction: 'desc' }],
      maxRecords: 100
    }).all();

    const orders = records.map(r => ({
      product: r.fields.product,
      region: r.fields.region,
      amount: r.fields.amount,
      buyer_contact: r.fields.buyer_contact,
      ref_id: r.fields.ref_id,
      timestamp: r.fields.timestamp
    }));

    res.json({ orders });
  } catch (err) {
    console.error('❌ Orders error:', err);
    res.status(500).json({ error: 'Failed to fetch orders' });
  }
});

app.get('/api/orders', async (req, res) => {
  const { region, product } = req.query;

  let formula = [];
  if (region) formula.push(`{region} = '${region}'`);
  if (product) formula.push(`SEARCH(LOWER('${product}'), LOWER({product}))`);

  try {
    const records = await base('Orders').select({
      filterByFormula: formula.length ? `AND(${formula.join(',')})` : undefined,
      sort: [{ field: 'timestamp', direction: 'desc' }],
      maxRecords: 100
    }).all();

    const orders = records.map(r => ({
      product: r.fields.product,
      region: r.fields.region,
      amount: r.fields.amount,
      buyer_contact: r.fields.buyer_contact,
      ref_id: r.fields.ref_id,
      timestamp: r.fields.timestamp
    }));

    res.json({ orders });
  } catch (err) {
    console.error('❌ Orders error:', err);
    res.status(500).json({ error: 'Failed to fetch orders' });
  }
});
