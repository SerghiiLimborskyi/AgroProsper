// feedback.js

// –ü—Å–µ–≤–¥–æ-—Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è Web3-–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è DAO-–≤—ñ–¥–≥—É–∫—É
async function submitFeedbackToDAO(name, message, vote) {
  if (!window.ethereum) {
    alert("‚ùå Web3 –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π. –ü—ñ–¥–∫–ª—é—á—ñ—Ç—å –≥–∞–º–∞–Ω–µ—Ü—å.");
    return;
  }

  try {
    const accounts = await ethereum.request({ method: 'eth_requestAccounts' });
    const user = accounts[0];

    // –¢—É—Ç –º–∞—î –±—É—Ç–∏ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ DAO-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–º
    console.log("üì® –í—ñ–¥–≥—É–∫ –≤—ñ–¥:", user);
    console.log("üë§ –Ü–º‚Äô—è:", name);
    console.log("üí¨ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:", message);
    console.log("üó≥ –û—Ü—ñ–Ω–∫–∞:", vote);

    // –ü—Å–µ–≤–¥–æ-–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
    alert(`‚úÖ –í—ñ–¥–≥—É–∫ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –≤—ñ–¥ ${user}. DAO-–æ—Ü—ñ–Ω–∫–∞: ${vote}‚≠ê`);
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ Web3:", error);
    alert("–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –≤—ñ–¥–≥—É–∫ —á–µ—Ä–µ–∑ Web3.");
  }
}
